const { EmbedBuilder, PermissionFlagsBits } = require('discord.js');

module.exports = {
  name: 'security',
  description: '–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
  aliases: ['sec', '–∑–∞—â–∏—Ç–∞'],
  adminOnly: true,
  
  async execute(message, args, bot) {
    const member = message.member;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (!bot.hasAdminRole(member) && !member.permissions.has(PermissionFlagsBits.Administrator)) {
      const noPermEmbed = new EmbedBuilder()
        .setColor(0xFF0000)
        .setTitle('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤')
        .setDescription('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        .setTimestamp();
      
      return message.reply({ embeds: [noPermEmbed] });
    }

    const subCommand = args[0]?.toLowerCase();
    
    switch (subCommand) {
      case 'status':
        await this.showStatus(message, bot);
        break;
      case 'lockdown':
        await this.toggleLockdown(message, args, bot);
        break;
      case 'settings':
        await this.showSettings(message, bot);
        break;
      case 'whitelist':
        await this.manageWhitelist(message, args, bot);
        break;
      case 'logs':
        await this.showRecentLogs(message, args, bot);
        break;
      default:
        await this.showHelp(message, bot);
    }
  },

  async showStatus(message, bot) {
    const lockdownStatus = bot.raidProtection.isLockdownActive();
    const statsEmbed = new EmbedBuilder()
      .setColor(lockdownStatus ? 0xFF0000 : 0x00FF00)
      .setTitle('üõ°Ô∏è –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
      .addFields(
        { 
          name: '–†–µ–∂–∏–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', 
          value: lockdownStatus ? 'üî¥ –ê–∫—Ç–∏–≤–µ–Ω' : 'üü¢ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω', 
          inline: true 
        },
        { 
          name: '–ê–Ω—Ç–∏—Å–ø–∞–º', 
          value: bot.config.antiSpam.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω', 
          inline: true 
        },
        { 
          name: '–ê–Ω—Ç–∏-—Ä–µ–π–¥', 
          value: bot.config.raidProtection.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω', 
          inline: true 
        },
        { 
          name: '–ê–Ω—Ç–∏-–∫—Ä–∞—à', 
          value: bot.config.antiCrash.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω', 
          inline: true 
        },
        { 
          name: '–õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π', 
          value: `${bot.config.antiSpam.messageLimit} –∑–∞ ${bot.config.antiSpam.timeWindow/1000}—Å`, 
          inline: true 
        },
        { 
          name: '–õ–∏–º–∏—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π', 
          value: `${bot.config.raidProtection.joinLimit} –∑–∞ ${bot.config.raidProtection.timeWindow/1000}—Å`, 
          inline: true 
        }
      )
      .setTimestamp();

    message.reply({ embeds: [statsEmbed] });
  },

  async toggleLockdown(message, args, bot) {
    const action = args[1]?.toLowerCase();
    
    if (action === 'on' || action === 'enable' || action === '–≤–∫–ª—é—á–∏—Ç—å') {
      await bot.raidProtection.enableLockdown(message.guild);
      
      const embed = new EmbedBuilder()
        .setColor(0xFF0000)
        .setTitle('üîí –†–µ–∂–∏–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–∫–ª—é—á–µ–Ω')
        .setDescription('–í—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∏–∫–∞—Ç—å—Å—è –¥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞.')
        .setTimestamp();
      
      message.reply({ embeds: [embed] });
      
    } else if (action === 'off' || action === 'disable' || action === '–æ—Ç–∫–ª—é—á–∏—Ç—å') {
      await bot.raidProtection.disableLockdown(message.guild);
      
      const embed = new EmbedBuilder()
        .setColor(0x00FF00)
        .setTitle('üîì –†–µ–∂–∏–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω')
        .setDescription('–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–Ω–æ–≤–∞ –º–æ–≥—É—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.')
        .setTimestamp();
      
      message.reply({ embeds: [embed] });
      
    } else {
      const helpEmbed = new EmbedBuilder()
        .setColor(0xFFA500)
        .setTitle('‚ùì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏')
        .setDescription('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `!security lockdown on/off`')
        .addFields(
          { name: '–í–∫–ª—é—á–∏—Ç—å', value: '`!security lockdown on`', inline: true },
          { name: '–û—Ç–∫–ª—é—á–∏—Ç—å', value: '`!security lockdown off`', inline: true }
        )
        .setTimestamp();
      
      message.reply({ embeds: [helpEmbed] });
    }
  },

  async showSettings(message, bot) {
    const settingsEmbed = new EmbedBuilder()
      .setColor(0x0099FF)
      .setTitle('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
      .addFields(
        { 
          name: 'üì® –ê–Ω—Ç–∏—Å–ø–∞–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 
          value: `‚Ä¢ –õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π: ${bot.config.antiSpam.messageLimit}\n‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ: ${bot.config.antiSpam.timeWindow/1000}—Å\n‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞: ${bot.config.antiSpam.muteDuration/60000} –º–∏–Ω`, 
          inline: false 
        },
        { 
          name: 'üö™ –ê–Ω—Ç–∏-—Ä–µ–π–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 
          value: `‚Ä¢ –õ–∏–º–∏—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: ${bot.config.raidProtection.joinLimit}\n‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ: ${bot.config.raidProtection.timeWindow/1000}—Å\n‚Ä¢ –†–æ–ª—å –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞: ${bot.config.raidProtection.quarantineRole}`, 
          inline: false 
        },
        { 
          name: 'üí• –ê–Ω—Ç–∏-–∫—Ä–∞—à –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 
          value: `‚Ä¢ –ú–∞–∫—Å –∫–∞–Ω–∞–ª–æ–≤ –≤ —á–∞—Å: ${bot.config.antiCrash.maxChannelsPerHour}\n‚Ä¢ –ú–∞–∫—Å —Ä–æ–ª–µ–π –≤ —á–∞—Å: ${bot.config.antiCrash.maxRolesPerHour}\n‚Ä¢ –ú–∞–∫—Å –∏–Ω–≤–∞–π—Ç–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏: ${bot.config.antiCrash.maxInvitesPerMessage}`, 
          inline: false 
        }
      )
      .setTimestamp();

    message.reply({ embeds: [settingsEmbed] });
  },

  async manageWhitelist(message, args, bot) {
    const action = args[1]?.toLowerCase();
    const targetUser = message.mentions.users.first();
    
    if (!action || !['add', 'remove', 'list', '–¥–æ–±–∞–≤–∏—Ç—å', '—É–¥–∞–ª–∏—Ç—å', '—Å–ø–∏—Å–æ–∫'].includes(action)) {
      const helpEmbed = new EmbedBuilder()
        .setColor(0xFFA500)
        .setTitle('‚ùì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º')
        .setDescription('–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø—Ä–æ–≤–µ—Ä–æ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
        .addFields(
          { name: '–î–æ–±–∞–≤–∏—Ç—å', value: '`!security whitelist add @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`', inline: false },
          { name: '–£–¥–∞–ª–∏—Ç—å', value: '`!security whitelist remove @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`', inline: false },
          { name: '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫', value: '`!security whitelist list`', inline: false }
        )
        .setTimestamp();
      
      return message.reply({ embeds: [helpEmbed] });
    }

    if (action === 'list' || action === '—Å–ø–∏—Å–æ–∫') {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
      const embed = new EmbedBuilder()
        .setColor(0x0099FF)
        .setTitle('üìã –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫')
        .setDescription('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
        .setTimestamp();
      
      return message.reply({ embeds: [embed] });
    }

    if (!targetUser) {
      return message.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞.');
    }

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º
    const embed = new EmbedBuilder()
      .setColor(0x00FF00)
      .setTitle('‚ö†Ô∏è –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
      .setDescription('–§—É–Ω–∫—Ü–∏—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.')
      .setTimestamp();
    
    message.reply({ embeds: [embed] });
  },

  async showRecentLogs(message, args, bot) {
    const logType = args[1]?.toLowerCase();
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
    const embed = new EmbedBuilder()
      .setColor(0x0099FF)
      .setTitle('üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
      .setDescription('–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\n–ü–æ–∫–∞ —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –≤ –ø–∞–ø–∫–µ `logs/`')
      .addFields(
        { name: '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã', value: 'spam, raid, crash, security', inline: false },
        { name: '–ü—Ä–∏–º–µ—Ä', value: '`!security logs spam`', inline: false }
      )
      .setTimestamp();
    
    message.reply({ embeds: [embed] });
  },

  async showHelp(message, bot) {
    const helpEmbed = new EmbedBuilder()
      .setColor(0x0099FF)
      .setTitle('üõ°Ô∏è –ö–æ–º–∞–Ω–¥—ã —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
      .setDescription(`–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: \`${bot.config.prefix}security [–∫–æ–º–∞–Ω–¥–∞]\``)
      .addFields(
        { name: 'üìä Status', value: '`status` - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º', inline: true },
        { name: 'üîí Lockdown', value: '`lockdown on/off` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', inline: true },
        { name: '‚öôÔ∏è Settings', value: '`settings` - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', inline: true },
        { name: 'üìã Whitelist', value: '`whitelist add/remove/list` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º', inline: true },
        { name: 'üìù Logs', value: '`logs [—Ç–∏–ø]` - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏', inline: true },
        { name: '‚ùì Help', value: '`help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É', inline: true }
      )
      .setFooter({ text: '–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º' })
      .setTimestamp();

    message.reply({ embeds: [helpEmbed] });
  }
};