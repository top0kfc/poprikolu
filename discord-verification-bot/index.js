const { 
    Client, 
    GatewayIntentBits, 
    ActionRowBuilder, 
    ButtonBuilder, 
    ButtonStyle, 
    EmbedBuilder, 
    PermissionFlagsBits 
} = require('discord.js');
require('dotenv').config();

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Discord
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMembers,
        GatewayIntentBits.MessageContent,
        GatewayIntentBits.GuildMessages
    ]
});

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
    VERIFICATION_CHANNEL_NAME: '–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è',
    VERIFIED_ROLE_NAME: '–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω',
    UNVERIFIED_ROLE_NAME: '–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω',
    VERIFICATION_BUTTON_ID: 'verify_user',
    EMBED_COLOR: '#00FF00',
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏
    VERIFICATION_COOLDOWN: 5000, // 5 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    MAX_VERIFICATION_ATTEMPTS: 3, // –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ —á–∞—Å
    ACCOUNT_MIN_AGE_DAYS: 7, // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ (–¥–Ω–∏)
    REQUIRE_AVATAR: true, // –¢—Ä–µ–±–æ–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    LOG_CHANNEL_NAME: '–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è-–ª–æ–≥–∏' // –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
};

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ø—ã—Ç–æ–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
const verificationAttempts = new Map(); // userId -> { attempts: number, lastAttempt: timestamp }
const verificationCooldowns = new Map(); // userId -> timestamp

// –°–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
client.once('ready', async () => {
    console.log(`‚úÖ –ë–æ—Ç ${client.user.tag} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!`);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –∏ —Ä–æ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    for (const guild of client.guilds.cache.values()) {
        await setupGuildVerification(guild);
    }
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
async function setupGuildVerification(guild) {
    try {
        // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏
        let verifiedRole = guild.roles.cache.find(role => role.name === CONFIG.VERIFIED_ROLE_NAME);
        let unverifiedRole = guild.roles.cache.find(role => role.name === CONFIG.UNVERIFIED_ROLE_NAME);
        
        // –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if (!verifiedRole) {
            verifiedRole = await guild.roles.create({
                name: CONFIG.VERIFIED_ROLE_NAME,
                color: '#00FF00',
                reason: '–†–æ–ª—å –¥–ª—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                permissions: []
            });
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å "${CONFIG.VERIFIED_ROLE_NAME}" –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${guild.name}`);
        }
        
        // –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å "–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if (!unverifiedRole) {
            unverifiedRole = await guild.roles.create({
                name: CONFIG.UNVERIFIED_ROLE_NAME,
                color: '#FF0000',
                reason: '–†–æ–ª—å –¥–ª—è –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                permissions: []
            });
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å "${CONFIG.UNVERIFIED_ROLE_NAME}" –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${guild.name}`);
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤
        await setupChannelPermissions(guild, verifiedRole, unverifiedRole);
        
        // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        await setupLogChannel(guild);
        
        // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        let verificationChannel = guild.channels.cache.find(
            channel => channel.name === CONFIG.VERIFICATION_CHANNEL_NAME && channel.isTextBased()
        );
        
        if (!verificationChannel) {
            verificationChannel = await guild.channels.create({
                name: CONFIG.VERIFICATION_CHANNEL_NAME,
                reason: '–ö–∞–Ω–∞–ª –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                permissionOverwrites: [
                    {
                        id: guild.roles.everyone.id,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory],
                        deny: [PermissionFlagsBits.SendMessages]
                    },
                    {
                        id: client.user.id,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages]
                    }
                ]
            });
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ "${CONFIG.VERIFICATION_CHANNEL_NAME}" –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${guild.name}`);
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        await sendVerificationMessage(verificationChannel);
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ ${guild.name}:`, error);
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤
async function setupLogChannel(guild) {
    try {
        let logChannel = guild.channels.cache.find(
            channel => channel.name === CONFIG.LOG_CHANNEL_NAME && channel.isTextBased()
        );
        
        if (!logChannel) {
            logChannel = await guild.channels.create({
                name: CONFIG.LOG_CHANNEL_NAME,
                reason: '–ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏',
                permissionOverwrites: [
                    {
                        id: guild.roles.everyone.id,
                        deny: [PermissionFlagsBits.ViewChannel]
                    },
                    {
                        id: client.user.id,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.SendMessages]
                    }
                ]
            });
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ "${CONFIG.LOG_CHANNEL_NAME}" –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${guild.name}`);
        }
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤:`, error);
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤
async function setupChannelPermissions(guild, verifiedRole, unverifiedRole) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
        const channels = guild.channels.cache.filter(channel => 
            channel.name !== CONFIG.VERIFICATION_CHANNEL_NAME &&
            channel.name !== CONFIG.LOG_CHANNEL_NAME
        );
        
        for (const [, channel] of channels) {
            // –î–ª—è –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –∑–∞–ø—Ä–µ—â–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤—É –∫–∞–Ω–∞–ª–æ–≤
            await channel.permissionOverwrites.create(unverifiedRole, {
                ViewChannel: false,
                SendMessages: false,
                Connect: false,
                Speak: false
            }).catch(() => {}); // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤, –≥–¥–µ –Ω–µ—Ç –ø—Ä–∞–≤
            
            // –î–ª—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø
            await channel.permissionOverwrites.create(verifiedRole, {
                ViewChannel: true,
                SendMessages: true,
                Connect: true,
                Speak: true
            }).catch(() => {}); // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤, –≥–¥–µ –Ω–µ—Ç –ø—Ä–∞–≤
        }
        
        console.log(`‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–æ–ª–µ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${guild.name}`);
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∫–∞–Ω–∞–ª–æ–≤:`, error);
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
async function sendVerificationMessage(channel) {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
        const messages = await channel.messages.fetch({ limit: 10 });
        const existingMessage = messages.find(msg => 
            msg.author.id === client.user.id && 
            msg.components.length > 0 &&
            msg.components[0].components[0]?.customId === CONFIG.VERIFICATION_BUTTON_ID
        );
        
        if (existingMessage) {
            console.log(`‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–∞–Ω–∞–ª–µ ${channel.name}`);
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        const embed = new EmbedBuilder()
            .setTitle('üîê –°—Ç—Ä–æ–≥–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
            .setDescription(
                '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä! üëã\n\n' +
                '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –æ—Å—Ç–∞–ª—å–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º —Å–µ—Ä–≤–µ—Ä–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Å—Ç—Ä–æ–≥—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.\n\n' +
                '**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:**\n' +
                `‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞: –º–∏–Ω–∏–º—É–º ${CONFIG.ACCOUNT_MIN_AGE_DAYS} –¥–Ω–µ–π\n` +
                `${CONFIG.REQUIRE_AVATAR ? '‚Ä¢ –ù–∞–ª–∏—á–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ\n' : ''}` +
                `‚Ä¢ –ú–∞–∫—Å–∏–º—É–º ${CONFIG.MAX_VERIFICATION_ATTEMPTS} –ø–æ–ø—ã—Ç–æ–∫ –≤ —á–∞—Å\n` +
                '‚Ä¢ –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞\n\n' +
                '‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ü–æ–ø—ã—Ç–∫–∏ –æ–±—Ö–æ–¥–∞ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏–≤–µ–¥—É—Ç –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ.\n\n' +
                '**–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è" –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º —Å–µ—Ä–≤–µ—Ä–∞.**'
            )
            .setColor(CONFIG.EMBED_COLOR)
            .setFooter({ text: '–°—Ç—Ä–æ–≥–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ | –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è' })
            .setTimestamp();
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        const button = new ButtonBuilder()
            .setCustomId(CONFIG.VERIFICATION_BUTTON_ID)
            .setLabel('‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è')
            .setStyle(ButtonStyle.Success)
            .setEmoji('üîì');
        
        const row = new ActionRowBuilder()
            .addComponents(button);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await channel.send({
            embeds: [embed],
            components: [row]
        });
        
        console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª ${channel.name}`);
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:`, error);
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
function checkAccountAge(user) {
    const accountAge = Date.now() - user.createdTimestamp;
    const minAge = CONFIG.ACCOUNT_MIN_AGE_DAYS * 24 * 60 * 60 * 1000; // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    return accountAge >= minAge;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞
function checkAvatar(user) {
    if (!CONFIG.REQUIRE_AVATAR) return true;
    return user.avatar !== null;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ cooldown
function checkCooldown(userId) {
    const now = Date.now();
    const lastAttempt = verificationCooldowns.get(userId);
    
    if (lastAttempt && (now - lastAttempt) < CONFIG.VERIFICATION_COOLDOWN) {
        return false;
    }
    
    return true;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –ø–æ–ø—ã—Ç–æ–∫
function checkAttemptLimit(userId) {
    const now = Date.now();
    const oneHour = 60 * 60 * 1000;
    
    const attempts = verificationAttempts.get(userId);
    if (!attempts) return true;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –µ—Å–ª–∏ –ø—Ä–æ—à–µ–ª —á–∞—Å
    if (now - attempts.lastAttempt > oneHour) {
        verificationAttempts.delete(userId);
        return true;
    }
    
    return attempts.attempts < CONFIG.MAX_VERIFICATION_ATTEMPTS;
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
async function logVerificationAttempt(guild, user, success, reason = null) {
    try {
        const logChannel = guild.channels.cache.find(
            channel => channel.name === CONFIG.LOG_CHANNEL_NAME && channel.isTextBased()
        );
        
        if (!logChannel) return;
        
        const embed = new EmbedBuilder()
            .setTitle(success ? '‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞' : '‚ùå –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
            .addFields(
                { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `${user.tag} (${user.id})`, inline: true },
                { name: '–í—Ä–µ–º—è', value: `<t:${Math.floor(Date.now() / 1000)}:F>`, inline: true },
                { name: '–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞', value: `${Math.floor((Date.now() - user.createdTimestamp) / (1000 * 60 * 60 * 24))} –¥–Ω–µ–π`, inline: true }
            )
            .setColor(success ? '#00FF00' : '#FF0000')
            .setThumbnail(user.displayAvatarURL());
        
        if (reason) {
            embed.addFields({ name: '–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è', value: reason, inline: false });
        }
        
        await logChannel.send({ embeds: [embed] });
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:`, error);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
client.on('interactionCreate', async interaction => {
    if (!interaction.isButton()) return;
    
    if (interaction.customId === CONFIG.VERIFICATION_BUTTON_ID) {
        await handleVerification(interaction);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function handleVerification(interaction) {
    try {
        const guild = interaction.guild;
        const member = interaction.member;
        const user = member.user;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º cooldown
        if (!checkCooldown(user.id)) {
            const remainingTime = Math.ceil((CONFIG.VERIFICATION_COOLDOWN - (Date.now() - verificationCooldowns.get(user.id))) / 1000);
            return await interaction.reply({
                content: `‚è±Ô∏è –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${remainingTime} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.`,
                ephemeral: true
            });
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cooldown
        verificationCooldowns.set(user.id, Date.now());
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫
        if (!checkAttemptLimit(user.id)) {
            await logVerificationAttempt(guild, user, false, '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ (3 –≤ —á–∞—Å)');
            return await interaction.reply({
                content: 'üö´ **–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫!**\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ —á–∞—Å. –ü—Ä–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –ø–æ–ø—ã—Ç–æ–∫ –æ–±—Ö–æ–¥–∞ —Å–∏—Å—Ç–µ–º—ã –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.',
                ephemeral: true
            });
        }
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
        const attempts = verificationAttempts.get(user.id) || { attempts: 0, lastAttempt: Date.now() };
        attempts.attempts += 1;
        attempts.lastAttempt = Date.now();
        verificationAttempts.set(user.id, attempts);
        
        // –ù–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–µ —Ä–æ–ª–∏
        const verifiedRole = guild.roles.cache.find(role => role.name === CONFIG.VERIFIED_ROLE_NAME);
        const unverifiedRole = guild.roles.cache.find(role => role.name === CONFIG.UNVERIFIED_ROLE_NAME);
        
        if (!verifiedRole) {
            return await interaction.reply({
                content: '‚ùå –†–æ–ª—å "–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.',
                ephemeral: true
            });
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if (member.roles.cache.has(verifiedRole.id)) {
            return await interaction.reply({
                content: '‚úÖ –í—ã —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã!',
                ephemeral: true
            });
        }
        
        // –°—Ç—Ä–æ–≥–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        let rejectionReason = null;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
        if (!checkAccountAge(user)) {
            const accountAgeDays = Math.floor((Date.now() - user.createdTimestamp) / (1000 * 60 * 60 * 24));
            rejectionReason = `–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ —Å–ª–∏—à–∫–æ–º –º–∞–ª: ${accountAgeDays} –¥–Ω–µ–π (—Ç—Ä–µ–±—É–µ—Ç—Å—è ${CONFIG.ACCOUNT_MIN_AGE_DAYS})`;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤–∞—Ç–∞—Ä–∞
        if (!rejectionReason && !checkAvatar(user)) {
            rejectionReason = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞–≤–∞—Ç–∞—Ä –≤ –ø—Ä–æ—Ñ–∏–ª–µ';
        }
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        if (rejectionReason) {
            await logVerificationAttempt(guild, user, false, rejectionReason);
            
            const failEmbed = new EmbedBuilder()
                .setTitle('üö´ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
                .setDescription(
                    `**–ü—Ä–∏—á–∏–Ω–∞:** ${rejectionReason}\n\n` +
                    '**–ß—Ç–æ –¥–µ–ª–∞—Ç—å:**\n' +
                    `${!checkAccountAge(user) ? `‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É –∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è ${CONFIG.ACCOUNT_MIN_AGE_DAYS} –¥–Ω–µ–π\n` : ''}` +
                    `${CONFIG.REQUIRE_AVATAR && !checkAvatar(user) ? '‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä –≤ –ø—Ä–æ—Ñ–∏–ª–µ Discord\n' : ''}` +
                    '‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π\n\n' +
                    `‚ö†Ô∏è –ü–æ–ø—ã—Ç–æ–∫ –æ—Å—Ç–∞–ª–æ—Å—å: ${CONFIG.MAX_VERIFICATION_ATTEMPTS - attempts.attempts} –∏–∑ ${CONFIG.MAX_VERIFICATION_ATTEMPTS} –≤ —á–∞—Å`
                )
                .setColor('#FF0000')
                .setFooter({ text: '–°—Ç—Ä–æ–≥–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏' })
                .setTimestamp();
            
            return await interaction.reply({
                embeds: [failEmbed],
                ephemeral: true
            });
        }
        
        // –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã - –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await member.roles.add(verifiedRole);
        
        // –£–±–∏—Ä–∞–µ–º —Ä–æ–ª—å "–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if (unverifiedRole && member.roles.cache.has(unverifiedRole.id)) {
            await member.roles.remove(unverifiedRole);
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        verificationAttempts.delete(user.id);
        verificationCooldowns.delete(user.id);
        
        // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
        await logVerificationAttempt(guild, user, true);
        
        // –°–æ–∑–¥–∞–µ–º embed —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
        const successEmbed = new EmbedBuilder()
            .setTitle('üéâ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞!')
            .setDescription(
                `**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${member.displayName}!** üëã\n\n` +
                '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Å—Ç—Ä–æ–≥—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é\n' +
                'üîì –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º —Å–µ—Ä–≤–µ—Ä–∞\n' +
                'üìù –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Å–µ—Ä–≤–µ—Ä–∞\n\n' +
                'üõ°Ô∏è **–ü–æ–º–Ω–∏—Ç–µ:** —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.'
            )
            .setColor('#00FF00')
            .setThumbnail(user.displayAvatarURL())
            .setFooter({ text: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ!' })
            .setTimestamp();
        
        await interaction.reply({
            embeds: [successEmbed],
            ephemeral: true
        });
        
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.tag} —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${guild.name}`);
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, error);
        
        await interaction.reply({
            content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.',
            ephemeral: true
        }).catch(console.error);
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏ "–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" –Ω–æ–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
client.on('guildMemberAdd', async member => {
    try {
        const unverifiedRole = member.guild.roles.cache.find(role => role.name === CONFIG.UNVERIFIED_ROLE_NAME);
        
        if (unverifiedRole) {
            await member.roles.add(unverifiedRole);
            console.log(`‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${member.user.tag} –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å "–ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ${member.guild.name}`);
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        const logChannel = member.guild.channels.cache.find(
            channel => channel.name === CONFIG.LOG_CHANNEL_NAME && channel.isTextBased()
        );
        
        if (logChannel) {
            const joinEmbed = new EmbedBuilder()
                .setTitle('üëã –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫')
                .addFields(
                    { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `${member.user.tag} (${member.user.id})`, inline: true },
                    { name: '–í—Ä–µ–º—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', value: `<t:${Math.floor(Date.now() / 1000)}:F>`, inline: true },
                    { name: '–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞', value: `${Math.floor((Date.now() - member.user.createdTimestamp) / (1000 * 60 * 60 * 24))} –¥–Ω–µ–π`, inline: true }
                )
                .setColor('#FFA500')
                .setThumbnail(member.user.displayAvatarURL());
                
            await logChannel.send({ embeds: [joinEmbed] });
        }
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É:`, error);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
client.on('guildCreate', async guild => {
    console.log(`üÜï –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä: ${guild.name} (${guild.id})`);
    await setupGuildVerification(guild);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
client.on('error', error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ Discord:', error);
});

process.on('unhandledRejection', error => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Promise:', error);
});

// –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–π —á–∞—Å
setInterval(() => {
    const now = Date.now();
    const oneHour = 60 * 60 * 1000;
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    for (const [userId, data] of verificationAttempts.entries()) {
        if (now - data.lastAttempt > oneHour) {
            verificationAttempts.delete(userId);
        }
    }
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ cooldowns
    for (const [userId, timestamp] of verificationCooldowns.entries()) {
        if (now - timestamp > CONFIG.VERIFICATION_COOLDOWN * 2) {
            verificationCooldowns.delete(userId);
        }
    }
    
    console.log('üßπ –û—á–∏—â–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏');
}, 60 * 60 * 1000);

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
client.login(process.env.DISCORD_TOKEN).catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ Discord:', error);
    process.exit(1);
});